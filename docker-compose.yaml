version: '2.1'
services:

  eureka:
    image: elvaliev/server
    ports:
      - "8761:8761"
    expose:
      - 8761
    healthcheck:
      test: "exit 0"

  config:
    image: elvaliev/config
    ports:
      - "8088:8088"
    depends_on:
      eureka:
        condition: service_healthy
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8761/eureka/
    healthcheck:
      test: "exit 0"

  gateway:
    restart: on-failure
    image: elvaliev/gateway
    ports:
      - "8008:8008"
    depends_on:
      eureka:
        condition: service_healthy
      config:
        condition: service_started
    environment:
      SPRING_CLOUD_CONFIG_URI: http://config/
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8008
      ZUUL_PREFIX: /api

  account:
    restart: on-failure
    image: elvaliev/account
    ports:
      - "8081:8081"
    depends_on:
      eureka:
        condition: service_healthy
      config:
        condition: service_started
      zookeeper:
        condition: service_started
      kafka:
        condition: service_started
      postgres:
        condition: service_started
    environment:
      SERVER_PORT: 8081
      SPRING_CLOUD_CONFIG_URI: http://config:8088
      SPRING_PROFILES_ACTIVE: docker

  store:
    restart: on-failure
    image: elvaliev/store
    ports:
      - "8083:8083"
    depends_on:
      eureka:
        condition: service_healthy
      config:
        condition: service_started
      zookeeper:
        condition: service_started
      kafka:
        condition: service_started
      postgres:
        condition: service_started
    environment:
      SERVER_PORT: 8083
      SPRING_CLOUD_CONFIG_URI: http://config:8088
      SPRING_PROFILES_ACTIVE: docker

  order:
    restart: on-failure
    image: elvaliev/order
    ports:
      - "8082:8082"
    depends_on:
      eureka:
        condition: service_healthy
      config:
        condition: service_started
      zookeeper:
        condition: service_started
      kafka:
        condition: service_started
      postgres:
        condition: service_started
    environment:
      SERVER_PORT: 8082
      SPRING_CLOUD_CONFIG_URI: http://config:8088
      SPRING_PROFILES_ACTIVE: docker

  delivery:
    restart: on-failure
    image: elvaliev/delivery
    ports:
      - "8084:8084"
    depends_on:
      eureka:
        condition: service_healthy
      config:
        condition: service_started
      zookeeper:
        condition: service_started
      kafka:
        condition: service_started
      postgres:
        condition: service_started
    environment:
      SERVER_PORT: 8084
      SPRING_CLOUD_CONFIG_URI: http://config:8088
      SPRING_PROFILES_ACTIVE: docker

  zookeeper:
    image: confluentinc/cp-zookeeper:5.2.4
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      KAFKA_HEAP_OPTS: -Xmx64m

  kafka:
    image: "confluentinc/cp-kafka:5.2.4"
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_LISTENERS: LC://kafka:29092,LX://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: LC://kafka:29092,LX://${DOCKER_HOST_IP:-localhost}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LC:PLAINTEXT,LX:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LC
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: -Xmx192m

  postgres:
    image: eventuateio/eventuate-tram-sagas-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: eventuate
      POSTGRES_PASSWORD: eventuate

  cdcservice:
    image: eventuateio/eventuate-cdc-service:0.6.0.RC3
    ports:
      - "8099:8080"
    depends_on:
      - postgres
      - kafka
      - zookeeper
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres/eventuate
      SPRING_DATASOURCE_USERNAME: eventuate
      SPRING_DATASOURCE_PASSWORD: eventuate
      SPRING_DATASOURCE_TEST_ON_BORROW: "true"
      SPRING_DATASOURCE_VALIDATION_QUERY: SELECT 1
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
      EVENTUATELOCAL_CDC_READER_NAME: PostgresPollingReader
      SPRING_PROFILES_ACTIVE: EventuatePolling
      JAVA_OPTS: -Xmx64m